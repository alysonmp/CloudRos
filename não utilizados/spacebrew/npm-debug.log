0 info it worked if it ends with okundefined1 verbose cli [ 'node', '/usr/local/bin/npm', 'install', 'socket.io' ]undefined2 info using npm@3.8.0undefined3 info using node@v0.6.12undefined4 silly loadCurrentTree Startingundefined5 silly install loadCurrentTreeundefined6 silly install readLocalPackageDataundefined7 silly fetchPackageMetaData socket.ioundefined8 silly fetchNamedPackageData socket.ioundefined9 silly mapToRegistry name socket.ioundefined10 silly mapToRegistry using default registryundefined11 silly mapToRegistry registry http://registry.npmjs.org/undefined12 silly mapToRegistry uri http://registry.npmjs.org/socket.ioundefined13 verbose request uri http://registry.npmjs.org/socket.ioundefined14 verbose request no auth neededundefined15 info attempt registry request try #1 at 16:16:36undefined16 verbose request id 02468d98f9f63a33undefined17 http request GET http://registry.npmjs.org/socket.ioundefined18 verbose type undefined_methodundefined19 verbose stack TypeError: Object function Buffer(subject, encoding, offset) {undefined19 verbose stack   if (!(this instanceof Buffer)) {undefined19 verbose stack     return new Buffer(subject, encoding, offset);undefined19 verbose stack   }undefined19 verbose stackundefined19 verbose stack   var type;undefined19 verbose stackundefined19 verbose stack   // Are we slicing?undefined19 verbose stack   if (typeof offset === 'number') {undefined19 verbose stack     this.length = coerce(encoding);undefined19 verbose stack     this.parent = subject;undefined19 verbose stack     this.offset = offset;undefined19 verbose stack   } else {undefined19 verbose stack     // Find the lengthundefined19 verbose stack     switch (type = typeof subject) {undefined19 verbose stack       case 'number':undefined19 verbose stack         this.length = coerce(subject);undefined19 verbose stack         break;undefined19 verbose stackundefined19 verbose stack       case 'string':undefined19 verbose stack         this.length = Buffer.byteLength(subject, encoding);undefined19 verbose stack         break;undefined19 verbose stackundefined19 verbose stack       case 'object': // Assume object is an arrayundefined19 verbose stack         this.length = coerce(subject.length);undefined19 verbose stack         break;undefined19 verbose stackundefined19 verbose stack       default:undefined19 verbose stack         throw new Error('First argument needs to be a number, ' +undefined19 verbose stack                         'array or string.');undefined19 verbose stack     }undefined19 verbose stackundefined19 verbose stack     if (this.length > Buffer.poolSize) {undefined19 verbose stack       // Big buffer, just alloc one.undefined19 verbose stack       this.parent = new SlowBuffer(this.length);undefined19 verbose stack       this.offset = 0;undefined19 verbose stackundefined19 verbose stack     } else {undefined19 verbose stack       // Small buffer.undefined19 verbose stack       if (!pool || pool.length - pool.used < this.length) allocPool();undefined19 verbose stack       this.parent = pool;undefined19 verbose stack       this.offset = pool.used;undefined19 verbose stack       pool.used += this.length;undefined19 verbose stack     }undefined19 verbose stackundefined19 verbose stack     // Treat array-ish objects as a byte array.undefined19 verbose stack     if (isArrayIsh(subject)) {undefined19 verbose stack       for (var i = 0; i < this.length; i++) {undefined19 verbose stack         this.parent[i + this.offset] = subject[i];undefined19 verbose stack       }undefined19 verbose stack     } else if (type == 'string') {undefined19 verbose stack       // We are a stringundefined19 verbose stack       this.length = this.write(subject, 0, encoding);undefined19 verbose stack     }undefined19 verbose stack   }undefined19 verbose stackundefined19 verbose stack   SlowBuffer.makeFastBuffer(this.parent, this, this.offset, this.length);undefined19 verbose stack } has no method 'concat'undefined19 verbose stack     at BufferList.copy (/usr/local/lib/node_modules/npm/node_modules/request/node_modules/bl/bl.js:118:21)undefined19 verbose stack     at BufferList.slice (/usr/local/lib/node_modules/npm/node_modules/request/node_modules/bl/bl.js:93:15)undefined19 verbose stack     at Request.<anonymous> (/usr/local/lib/node_modules/npm/node_modules/request/request.js:1012:32)undefined19 verbose stack     at Request.emit (events.js:88:20)undefined19 verbose stack     at IncomingMessage.<anonymous> (/usr/local/lib/node_modules/npm/node_modules/request/request.js:963:12)undefined19 verbose stack     at IncomingMessage.emit (events.js:88:20)undefined19 verbose stack     at HTTPParser.onMessageComplete (http.js:137:23)undefined19 verbose stack     at Socket.ondata (http.js:1150:24)undefined19 verbose stack     at TCP.onread (net.js:354:27)undefined20 verbose cwd /home/alyson/catkin_ws/src/space_ros/src/spacebrewundefined21 error Linux 3.11.0-26-genericundefined22 error argv "node" "/usr/local/bin/npm" "install" "socket.io"undefined23 error node v0.6.12undefined24 error npm  v3.8.0undefined25 error Object function Buffer(subject, encoding, offset) {undefined25 error   if (!(this instanceof Buffer)) {undefined25 error     return new Buffer(subject, encoding, offset);undefined25 error   }undefined25 errorundefined25 error   var type;undefined25 errorundefined25 error   // Are we slicing?undefined25 error   if (typeof offset === 'number') {undefined25 error     this.length = coerce(encoding);undefined25 error     this.parent = subject;undefined25 error     this.offset = offset;undefined25 error   } else {undefined25 error     // Find the lengthundefined25 error     switch (type = typeof subject) {undefined25 error       case 'number':undefined25 error         this.length = coerce(subject);undefined25 error         break;undefined25 errorundefined25 error       case 'string':undefined25 error         this.length = Buffer.byteLength(subject, encoding);undefined25 error         break;undefined25 errorundefined25 error       case 'object': // Assume object is an arrayundefined25 error         this.length = coerce(subject.length);undefined25 error         break;undefined25 errorundefined25 error       default:undefined25 error         throw new Error('First argument needs to be a number, ' +undefined25 error                         'array or string.');undefined25 error     }undefined25 errorundefined25 error     if (this.length > Buffer.poolSize) {undefined25 error       // Big buffer, just alloc one.undefined25 error       this.parent = new SlowBuffer(this.length);undefined25 error       this.offset = 0;undefined25 errorundefined25 error     } else {undefined25 error       // Small buffer.undefined25 error       if (!pool || pool.length - pool.used < this.length) allocPool();undefined25 error       this.parent = pool;undefined25 error       this.offset = pool.used;undefined25 error       pool.used += this.length;undefined25 error     }undefined25 errorundefined25 error     // Treat array-ish objects as a byte array.undefined25 error     if (isArrayIsh(subject)) {undefined25 error       for (var i = 0; i < this.length; i++) {undefined25 error         this.parent[i + this.offset] = subject[i];undefined25 error       }undefined25 error     } else if (type == 'string') {undefined25 error       // We are a stringundefined25 error       this.length = this.write(subject, 0, encoding);undefined25 error     }undefined25 error   }undefined25 errorundefined25 error   SlowBuffer.makeFastBuffer(this.parent, this, this.offset, this.length);undefined25 error } has no method 'concat'undefined26 error If you need help, you may report this error at:undefined26 error     <https://github.com/npm/npm/issues>undefined27 verbose exit [ 1, true ]undefined